/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Helper.CRUD;
import Model.Administrasi;
import Model.Member;
import Model.Pengepul;
import Model.Sampah;
import Model.TransaksiBeli;
import Model.TransaksiJual;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author riza
 */
public class Dahboard extends javax.swing.JFrame {

    /**
     * Creates new form NewForm
     */
    private final int MEMBER = 11, SAMPAH = 12, PENGEPUL = 13, JUAL = 14, BELI = 15, TARIK_TUNAI = 16, KEUANGAN = 17;

    CRUD db;
    int statusUI;
    String msg;

    public Dahboard() {
        if (!Main.restriced) {
            JOptionPane.showMessageDialog(null, "Please run from main class");
            System.exit(0);
        }
        if (Session.isLogIn()) {
            initComponents();
            db = new CRUD();
            showTableMember(null);
            setUIState(MEMBER);
        } else {
            dispose();
            new LogIn().setVisible(true);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        labelJual = new javax.swing.JLabel();
        indJual = new javax.swing.JLabel();
        labelBeli = new javax.swing.JLabel();
        indBeli = new javax.swing.JLabel();
        labelMember = new javax.swing.JLabel();
        indMember = new javax.swing.JLabel();
        labelPengepul = new javax.swing.JLabel();
        indPengepul = new javax.swing.JLabel();
        labelGudang = new javax.swing.JLabel();
        indGudang = new javax.swing.JLabel();
        labelTunai = new javax.swing.JLabel();
        indTarik = new javax.swing.JLabel();
        labelAdmin = new javax.swing.JLabel();
        indAdmin = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mTable = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        labelTable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 96, 100));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/round-account-button-with-user-inside (3).png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Hi, Riza");

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/exit.png"))); // NOI18N
        jLabel4.setText("Log Out");

        labelJual.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        labelJual.setForeground(new java.awt.Color(255, 255, 255));
        labelJual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/dollar-symbol.png"))); // NOI18N
        labelJual.setText("   Penjualan");
        labelJual.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelJual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelJualMouseClicked(evt);
            }
        });

        indJual.setBackground(new java.awt.Color(255, 255, 255));
        indJual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/arrow.png"))); // NOI18N

        labelBeli.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        labelBeli.setForeground(new java.awt.Color(255, 255, 255));
        labelBeli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/coins.png"))); // NOI18N
        labelBeli.setText("   Pembelian");
        labelBeli.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelBeli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBeliMouseClicked(evt);
            }
        });

        indBeli.setBackground(new java.awt.Color(255, 255, 255));
        indBeli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/arrow.png"))); // NOI18N

        labelMember.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        labelMember.setForeground(new java.awt.Color(255, 255, 255));
        labelMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/user.png"))); // NOI18N
        labelMember.setText("   Member");
        labelMember.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelMemberMouseClicked(evt);
            }
        });

        indMember.setBackground(new java.awt.Color(255, 255, 255));
        indMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/arrow.png"))); // NOI18N

        labelPengepul.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        labelPengepul.setForeground(new java.awt.Color(255, 255, 255));
        labelPengepul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/exchange.png"))); // NOI18N
        labelPengepul.setText("   Pengepul");
        labelPengepul.setToolTipText("");
        labelPengepul.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelPengepul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelPengepulMouseClicked(evt);
            }
        });

        indPengepul.setBackground(new java.awt.Color(255, 255, 255));
        indPengepul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/arrow.png"))); // NOI18N

        labelGudang.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        labelGudang.setForeground(new java.awt.Color(255, 255, 255));
        labelGudang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/packages-storage-for-distribution.png"))); // NOI18N
        labelGudang.setText("   Gudang");
        labelGudang.setToolTipText("");
        labelGudang.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelGudang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelGudangMouseClicked(evt);
            }
        });

        indGudang.setBackground(new java.awt.Color(255, 255, 255));
        indGudang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/arrow.png"))); // NOI18N

        labelTunai.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        labelTunai.setForeground(new java.awt.Color(255, 255, 255));
        labelTunai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/payment-method.png"))); // NOI18N
        labelTunai.setText("   Tarik Tunai");
        labelTunai.setToolTipText("");
        labelTunai.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        indTarik.setBackground(new java.awt.Color(255, 255, 255));
        indTarik.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/arrow.png"))); // NOI18N

        labelAdmin.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        labelAdmin.setForeground(new java.awt.Color(255, 255, 255));
        labelAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/financial-bar-chart.png"))); // NOI18N
        labelAdmin.setText("   Administrasi");
        labelAdmin.setToolTipText("");
        labelAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelAdminMouseClicked(evt);
            }
        });

        indAdmin.setBackground(new java.awt.Color(255, 255, 255));
        indAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/arrow.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTunai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelGudang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelPengepul, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelMember, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelBeli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelJual, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(indJual, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indBeli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indMember, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indPengepul, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indGudang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indTarik, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel4)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(indJual, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelJual, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(indBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(indMember, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMember, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(indPengepul, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPengepul, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(indGudang, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelGudang, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(indTarik, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTunai, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(indAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        btnNew.setText("New...");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit..");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        mTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "null", "null", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(mTable);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/magnifier-tool.png"))); // NOI18N

        labelTable.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        labelTable.setForeground(new java.awt.Color(0, 96, 100));
        labelTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTable.setText("Tabel Beli");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addGap(70, 70, 70)
                        .addComponent(labelTable, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                        .addGap(79, 79, 79)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNew)
                        .addComponent(btnEdit)
                        .addComponent(btnDelete)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelTable)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        switch (statusUI) {
            case MEMBER:
                MemberForm nMember = new MemberForm(null);
                nMember.setAlwaysOnTop(true);
                nMember.setVisible(true);
                break;
            case SAMPAH:
                SampahForm nSampah = new SampahForm(null);
                nSampah.setAlwaysOnTop(true);
                nSampah.setVisible(true);
                break;
            case PENGEPUL:
                PengepulForm pengepulForm = new PengepulForm(null);
                pengepulForm.setAlwaysOnTop(true);
                pengepulForm.setVisible(true);
                break;
            case KEUANGAN:
                KeuanganForm keuanganForm = new KeuanganForm();
                keuanganForm.setAlwaysOnTop(true);
                keuanganForm.setVisible(true);
                break;
            case JUAL:
                PenjualanForm pj = new PenjualanForm();
                pj.setAlwaysOnTop(true);
                pj.setVisible(true);
                break;
            case BELI:
                PembelianForm pb = new PembelianForm();
                pb.setAlwaysOnTop(true);
                pb.setVisible(true);
                break;
                
            default:
        }
    }//GEN-LAST:event_btnNewActionPerformed

    private void labelJualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelJualMouseClicked
        // TODO add your handling code here:
        setUIState(JUAL);
        if (!showTableTJual(null)) {
            throwMessage();
        }
    }//GEN-LAST:event_labelJualMouseClicked

    private void labelBeliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBeliMouseClicked
        // TODO add your handling code here:
        setUIState(BELI);
        if (!showTableTbeli(null)) {
            throwMessage();
        }
    }//GEN-LAST:event_labelBeliMouseClicked

    private void labelMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelMemberMouseClicked
        // TODO add your handling code here:
        setUIState(MEMBER);
        if (!showTableMember(null)) {
            throwMessage();
        }
    }//GEN-LAST:event_labelMemberMouseClicked

    private void labelGudangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelGudangMouseClicked
        // TODO add your handling code here:
        setUIState(SAMPAH);
        if (!showTableSampah(null)) {
            throwMessage();
        }
    }//GEN-LAST:event_labelGudangMouseClicked

    private void labelPengepulMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelPengepulMouseClicked
        // TODO add your handling code here:
        setUIState(PENGEPUL);
        if (!showTablePengepul(null)) {
            throwMessage();
        }
    }//GEN-LAST:event_labelPengepulMouseClicked

    private void labelAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelAdminMouseClicked
        // TODO add your handling code here:
        setUIState(KEUANGAN);
        if (!showTableAdmin(null)) {
            throwMessage();
        }
    }//GEN-LAST:event_labelAdminMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int row = mTable.getSelectedRow();
        if (row == -1) {
            return;
        }
        switch (statusUI) {
            case MEMBER:
                int id = Integer.parseInt(mTable.getValueAt(row, 0).toString());
                String nama = mTable.getValueAt(row, 1).toString();
                String NIK = mTable.getValueAt(row, 2).toString();
                String alamat = mTable.getValueAt(row, 3).toString();
                String telp = mTable.getValueAt(row, 4).toString();
                String saldoS = mTable.getValueAt(row, 5).toString();

                double saldo = parseCurr(saldoS);
                MemberForm newMember = new MemberForm(new Member(id, nama, NIK, alamat, telp, saldo));
                newMember.setAlwaysOnTop(true);
                newMember.setVisible(true);
                break;
                
            case SAMPAH:
//                "ID", "Jenis", "Harga Jual", "HargaBeli", "Stok(Kg)"
                  int idSampah = Integer.parseInt(mTable.getValueAt(row, 0).toString());
                  String jenis = mTable.getValueAt(row,1).toString();
                  double hJual = parseCurr(mTable.getValueAt(row, 2).toString());
                  double hBeli = parseCurr(mTable.getValueAt(row, 3).toString());
                  int stok = Integer.parseInt(mTable.getValueAt(row, 0).toString());
                  SampahForm sampahForm1 = new SampahForm(new Sampah(idSampah, jenis, hJual, hBeli, stok));
                  sampahForm1.setAlwaysOnTop(true);
                  sampahForm1.setVisible(true);
                break;
            case PENGEPUL:
//                "ID", "Nama", "Alamat", "Jadwal", "No. Telp"
                  Pengepul p = new Pengepul(
                          Integer.parseInt(mTable.getValueAt(row, 0).toString()), 
                          mTable.getValueAt(row, 1).toString(), 
                          mTable.getValueAt(row, 2).toString(), 
                          mTable.getValueAt(row, 3).toString(), 
                          mTable.getValueAt(row, 4).toString()
                  );
                  PengepulForm pengepulForm = new PengepulForm(p);
                  pengepulForm.setAlwaysOnTop(true);
                  pengepulForm.setVisible(true);
                break;
                
                
            default:
                
                
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = mTable.getSelectedRow();
        if (row == -1 || row>mTable.getRowCount()-1) {
            return;
        }
        int selId = Integer.parseInt(mTable.getValueAt(row, 0).toString());
        try {
            switch (statusUI) {
                case MEMBER:
                    String selNama = mTable.getValueAt(row, 1).toString();
                    if (JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus " + selNama + " ?", "Warning", 2)
                            == JOptionPane.YES_OPTION) {
                        if (!db.delete("member", "id_member = " + selId)) {
                            JOptionPane.showMessageDialog(null, db.getMessage());
                        } else {
                            showTableMember(null);
                        }

                    }
                    break;
                case SAMPAH:
                    String jenisSampah = mTable.getValueAt(row, 1).toString();
                    if (JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus " + jenisSampah + " ?", "Warning", 2)
                            == JOptionPane.YES_OPTION) {
                        if (!db.delete("sampah", "id_jenis = " + selId)) {
                            JOptionPane.showMessageDialog(null, db.getMessage());
                        } else {
                            showTableSampah(null);
                        }

                    }
                case PENGEPUL:
                    String namaPengepul = mTable.getValueAt(row, 1).toString();
                    if (JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus " + namaPengepul + " ?", "Warning", 2)
                            == JOptionPane.YES_OPTION) {
                        if (!db.delete("pengepul", "id_pengepul = " + selId)) {
                            JOptionPane.showMessageDialog(null, db.getMessage());
                        } else {
                            showTablePengepul(null);
                        }

                    }
                    break;

                default:
            }
        } catch (Exception e) {
            
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dahboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dahboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dahboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dahboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dahboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JLabel indAdmin;
    private javax.swing.JLabel indBeli;
    private javax.swing.JLabel indGudang;
    private javax.swing.JLabel indJual;
    private javax.swing.JLabel indMember;
    private javax.swing.JLabel indPengepul;
    private javax.swing.JLabel indTarik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel labelAdmin;
    private javax.swing.JLabel labelBeli;
    private javax.swing.JLabel labelGudang;
    private javax.swing.JLabel labelJual;
    private javax.swing.JLabel labelMember;
    private javax.swing.JLabel labelPengepul;
    private javax.swing.JLabel labelTable;
    private javax.swing.JLabel labelTunai;
    private javax.swing.JTable mTable;
    // End of variables declaration//GEN-END:variables

    private void throwMessage() {
        JOptionPane.showMessageDialog(null, msg);
    }

    private String formatCurr(double d) {
        if (d >= 0) {
            return String.format("Rp, %,.0f", d).replace(",", ".") + ",-";
        } else {
            return String.format("- Rp. %,.0f", d * -1).replace(",", ".") + ",-";
        }
    }

    private double parseCurr(String s) {
        s = s.replace("Rp.", "");
        s = s.replace(",-", "");
        s = s.replace(".", "");
        return Double.parseDouble(s);
    }

    private void setUIState(int state) {
        indJual.setVisible(false);
        indBeli.setVisible(false);
        indMember.setVisible(false);
        indPengepul.setVisible(false);
        indAdmin.setVisible(false);
        indGudang.setVisible(false);
        indTarik.setVisible(false);

        btnEdit.setEnabled(true);
        btnDelete.setEnabled(true);
        statusUI = state;
        switch (state) {
            case SAMPAH:
                indGudang.setVisible(true);
                labelTable.setText("Tabel Sampah");
                break;
            case MEMBER:
                indMember.setVisible(true);
                labelTable.setText("Tabel Member");
                break;
            case PENGEPUL:
                indPengepul.setVisible(true);
                labelTable.setText("Tabel Pengepul");
                break;
            case BELI:
                indBeli.setVisible(true);
                labelTable.setText("Tabel Pembelian");
                btnEdit.setEnabled(false);
                btnDelete.setEnabled(false);
                break;
            case JUAL:
                indJual.setVisible(true);
                labelTable.setText("Tabel Penjualan");
                btnEdit.setEnabled(false);
                btnDelete.setEnabled(false);
                break;
            case KEUANGAN:
                indAdmin.setVisible(true);
                labelTable.setText("Tabel Keuangan");
                btnEdit.setEnabled(false);
                btnDelete.setEnabled(false);
                break;
            case TARIK_TUNAI:
                indTarik.setVisible(true);
                labelTable.setText("Tabel Tarik Tunai");
                btnEdit.setEnabled(false);
                btnDelete.setEnabled(false);
                break;

            default:
        }
    }

    public boolean showTableMember(String where) {

        String[] field = {"ID", "Nama", "NIK", "Alamat", "No.Telp", "Saldo"};

        DefaultTableModel model = new DefaultTableModel(null, field);
        model.setRowCount(0);

        mTable.setModel(model);

        if (!db.get(null, "member", where, -1)) {
            msg = db.getMessage();
            return false;
        }

        ArrayList<Member> memberList = db.parseMember();
        Member cMember;
        for (int i = 0; i < memberList.size(); i++) {
            cMember = memberList.get(i);

            Object[] row = {
                cMember.getId(),
                cMember.getNik(),
                cMember.getNama(),
                cMember.getAlamat(),
                cMember.getNoTelp(),
                formatCurr(cMember.getSaldo())
            };

            model.addRow(row);
        }

        db.closeConnection();
        return true;
    }

    public boolean showTableSampah(String where) {
        String[] field = {"ID", "Jenis", "Harga Jual", "HargaBeli", "Stok(Kg)"};
        DefaultTableModel model = new DefaultTableModel(null, field);
        model.setRowCount(0);
        mTable.setModel(model);
        if (!db.get(null, "sampah", where, -1)) {
            msg = db.getMessage();
            return false;
        }

        ArrayList<Sampah> sampahList = db.parseSampah();
        Sampah cSampah;

        for (int i = 0; i < sampahList.size(); i++) {
            cSampah = sampahList.get(i);

            Object[] row = {
                cSampah.getIdJenis(),
                cSampah.getJenis(),
                formatCurr(cSampah.getHargaJual()),
                formatCurr(cSampah.getHargaBeli()),
                cSampah.getStok()
            };

            model.addRow(row);
        }
        db.closeConnection();

        return true;
    }

    public boolean showTablePengepul(String where) {

        String[] field = {"ID", "Nama", "Alamat", "Jadwal", "No. Telp"};
        DefaultTableModel model = new DefaultTableModel(null, field);
        model.setRowCount(0);
        mTable.setModel(model);
        if (!db.get(null, "pengepul", where, -1)) {
            msg = db.getMessage();
            return false;
        }

        ArrayList<Pengepul> pengepulList = db.parsePengepul();
        Pengepul cPengepul;

        for (int i = 0; i < pengepulList.size(); i++) {
            cPengepul = pengepulList.get(i);

            Object[] row = {
                cPengepul.getIdPengepul(),
                cPengepul.getNama(),
                cPengepul.getAlamat(),
                cPengepul.getJadwal(),
                cPengepul.getNoTelp()
            };

            model.addRow(row);
        }

        db.closeConnection();
        return true;
    }

    public boolean showTableAdmin(String where) {
//        SELECT `id_adm`, `tanggal`, `saldo`, `keterangan`, `pemasukan` FROM `administrasi` WHERE 1

        String[] field = {"ID", "Tanggal", "Pemasukan", "Saldo", "Keterangan"};
        DefaultTableModel model = new DefaultTableModel(null, field);
        model.setRowCount(0);
        mTable.setModel(model);
        if (!db.get(null, "administrasi", where, -1)) {
            msg = db.getMessage();
            return false;
        }

        ArrayList<Administrasi> adminList = db.parseAdmin();
        Administrasi cAdmin;

        for (int i = 0; i < adminList.size(); i++) {
            cAdmin = adminList.get(i);

            Object[] row = {
                cAdmin.getId(),
                cAdmin.getDate(),
                formatCurr(cAdmin.getPemasukan()),
                formatCurr(cAdmin.getSaldo()),
                cAdmin.getKeterangan()
            };

            model.addRow(row);
        }

        db.closeConnection();
        return true;
    }

    public boolean showTableTbeli(String where) {
//         SELECT `id_tbeli`, `id_jenis`, `berat_total`, `nomor_nota`, `id_member`, `total`, `tanggal`

        String[] field = {"ID", "ID Jenis", "Berat", "Total", "No. Nota", "ID Member", "Tanggal"};
        DefaultTableModel model = new DefaultTableModel(null, field);
        model.setRowCount(0);
        mTable.setModel(model);

        if (!db.get(null, "transaksi_beli", where, -1)) {
            msg = db.getMessage();
            return false;
        }

        ArrayList<TransaksiBeli> list = db.parseTbeli();
        TransaksiBeli cItem;

        for (int i = 0; i < list.size(); i++) {
            cItem = list.get(i);
            Object[] row = {
                cItem.getId(),
                cItem.getIdJenis(),
                cItem.getBeratTotal(),
                formatCurr(cItem.getTotal()),
                cItem.getNoNota(),
                cItem.getIdMember(),
                cItem.getTanggal()
            };

            model.addRow(row);
        }

        db.closeConnection();
        return true;
    }

    public boolean showTableTJual(String where) {
//        SELECT `id_tjual`, `id_pengepul`, `id_jenis`, `berat_total`, `total`, `tanggal` FROM `transaksi_jual` WHERE 

        String[] field = {"ID","Nota", "ID Pengepul", "ID Jenis", "Berat", "Total", "Tanggal"};
        DefaultTableModel model = new DefaultTableModel(null, field);
        model.setRowCount(0);
        mTable.setModel(model);

        if (!db.get(null, "transaksi_jual", where, -1)) {
            msg = db.getMessage();
            return false;
        }

        ArrayList<TransaksiJual> list = db.parseTJual();
        TransaksiJual cItem;

        for (int i = 0; i < list.size(); i++) {
            cItem = list.get(i);
            Object[] row = {
                cItem.getId(),
                cItem.getNota(),
                cItem.getIdPengepul(),
                cItem.getIdJenis(),
                cItem.getBeratTotal(),
                formatCurr(cItem.getTotal()),
                cItem.getTanggal(),};

            model.addRow(row);
        }

        db.closeConnection();
        return true;
    }

}
